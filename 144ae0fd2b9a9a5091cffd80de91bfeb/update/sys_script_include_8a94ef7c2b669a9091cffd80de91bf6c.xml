<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>false</active>
        <api_name>x_snc_7_on_site_0.AudioRecorder</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <mobile_callable>false</mobile_callable>
        <name>AudioRecorder</name>
        <sandbox_callable>false</sandbox_callable>
        <script><![CDATA[var AudioRecorder = Class.create();
AudioRecorder.prototype = {
    initialize: function () {},
    
        processAttachment: function(attachmentSysId, relatedTable, relatedRecordSysId) {
        var gr = new GlideRecord('sys_attachment');
        if (gr.get(attachmentSysId)) {
            var newRecord = new GlideRecord('x_snc_7_on_site_0_audiosavedb');
            newRecord.initialize();
            newRecord.audio_file_name = gr.file_name;
            newRecord.audio_file_size = gr.size_bytes;
            newRecord.sys_updated_by = gs.getUserName();
            newRecord.related_record = relatedRecordSysId;
            newRecord.insert();
            return 'Metadata saved successfully';
        }
        return 'Attachment not found';
    },

	saveAudioToDB: function(attachmentSysId) {
		// sys_attachmentから音声データの取得
		var attachement = new GlideRecord('sys_attachment');
		if(attachement.get(attachmentSysId)) {
			var attachmentData = new GlideSysAttachement();
			var audioContent = attachmentData.getBytes(attachment); // 音声データのバイナリ

            // db_audio テーブルに音声データを保存
            var audioRecord = new GlideRecord('db_audio');
            audioRecord.initialize();
            audioRecord.name = attachment.file_name; // ファイル名
            audioRecord.audio = audioContent;       // 音声データ
            audioRecord.sys_updated_by = gs.getUserName();  // アップロード者
            audioRecord.insert();

            return 'Audio saved successfully to db_audio';
        }
        return 'Attachment not found';
    },
    
    type: 'AudioRecorder'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-12-16 07:50:31</sys_created_on>
        <sys_id>8a94ef7c2b669a9091cffd80de91bf6c</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>AudioRecorder</sys_name>
        <sys_package display_value="7_On-site Work Request" source="x_snc_7_on_site_0">144ae0fd2b9a9a5091cffd80de91bfeb</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="7_On-site Work Request">144ae0fd2b9a9a5091cffd80de91bfeb</sys_scope>
        <sys_update_name>sys_script_include_8a94ef7c2b669a9091cffd80de91bf6c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-12-16 08:48:04</sys_updated_on>
    </sys_script_include>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>8a94ef7c2b669a9091cffd80de91bf6c</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-12-16 07:50:30</sys_created_on>
        <sys_id>a1b42b7c2b669a9091cffd80de91bf11</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-12-16 07:50:30</sys_updated_on>
        <table>sys_script_include</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
